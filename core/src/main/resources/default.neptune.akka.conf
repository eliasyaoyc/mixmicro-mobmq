{
    akka = {
        actor = {
            allow-java-serialization = on
            warn-about-java-serializer-usage = off
            default-dispatcher = {
                executor = "fork-join-executor"
                fork-join-executor = {
                    parallelism-factor = 2
                    parallelism-max = 64
                    parallelism-min = 8
                }
                throughput = 15
            }
            guardian-supervisor-strategy = "xyz.vopen.framework.neptune.rpc.akka.EscalatingSupervisorStrategy"
            provider = "akka.remote.RemoteActorRefProvider"
            supervisor-dispatcher = {
                executor = "thread-pool-executor"
                thread-pool-executor = {
                    core-pool-size-max = 1
                    core-pool-size-min = 1
                }
                type = Dispatcher
            }
        }
        daemonic = off
        jvm-exit-on-fatal-error = on
        log-config-on-start = off
        log-dead-letters = off
        log-dead-letters-during-shutdown = off
        loggers = [
            akka.event.slf4j.Slf4jLogger
        ]
        logging-filter = akka.event.slf4j.Slf4jLoggingFilter
        loglevel = DEBUG
        remote = {
            log-remote-lifecycle-events = off
            netty = {
                tcp = {
                    hostname = localhost
                    port = 6123
                    bind-hostname = 0.0.0.0
                    bind-port = 6123
                    connection-timeout = 20000ms
                    maximum-frame-size = 10485760b
                    client-socket-worker-pool = {
                        pool-size-factor = 1
                        pool-size-max = 2
                        pool-size-min = 1
                    }
            
                    server-socket-worker-pool = {
                        pool-size-factor = 1
                        pool-size-max = 2
                        pool-size-min = 1
                    }
                    tcp-nodelay = on
                    transport-class = akka.remote.transport.netty.NettyTransport
                }
            }
            retry-gate-closed-for = 50ms
            startup-timeout = 100000ms
            transport-failure-detector = {
                acceptable-heartbeat-pause = 6000000ms
                heartbeat-interval = 1000000ms
                threshold = 300
            }
        }
        serialize-messages = off
        stdout-loglevel = OFF
    }
}